html,body {
  width: 100%;
  height: 100%;
}

body {
  background-color: #b7b7a4;
  display: flex;
  flex-direction: column;
  height: 100vh;
}

header {
  background-color: #cb997e;
  height: 10%;
}

footer {
  background-color: #cb997e;
  height: 10%;
}

button {
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 0.5em;
  margin: 0.2em;
  font-size: 2em;
  outline: none;
}

.main {
  background-color: aliceblue;
  height: 80%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.wrapper {
  background-color: #eddcd2;
  width: 50%;
  height: 75%;
  display: grid;
  grid: "miniDisplay miniDisplay miniDisplay miniDisplay"
        "display display display display"
        "ac change-sign percent divide" 
        "seven eight nine multiply"
        "four five six subtract"
        "one two three sum"
        "zero zero dot equal";
  grid-template-rows: 1fr 2fr 1fr 1fr 1fr 1fr 1fr;
  grid-template-columns: repeat(4, 1fr);
  gap: 0.5em;
  border: black solid 1em;
}

#display {
  background-color: aliceblue;
  grid-area: display;
  margin: 0.5em;
  border-radius: 5%;
  height: 2em;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  padding: 0.5em;
  font-size: 2em;
}

#miniDisplay {
  background-color: aqua;
  grid-area: miniDisplay;
  margin: 0.5em 1em 0 1em;
  border-radius: 5%;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  padding: 1em;
}

.number {
  background-color: #a5a58d;
}

#numOne {
  grid-area: one;
}

#numTwo {
  grid-area: two;
}
 
#numThree {
  grid-area: three;
}
 
#numFour {
  grid-area: four;
}
 
#numFive {
  grid-area: five;
}
 
#numSix {
  grid-area: six;
}
 
#numSeven {
  grid-area: seven;
}
 
#numEight {
  grid-area: eight;
}
 
#numNine {
  grid-area: nine;
}
 
#numZero {
  grid-area: zero;
}

.operation {
  background-color: rgb(24, 86, 139);
}

#opAc {
  grid-area: ac;
}
#opChangeSign {
  grid-area: change-sign;
}
#opPercent {
  grid-area: percent;
}
#opDvide {
  grid-area: divide;
}
#opMultiply {
  grid-area: multiply;
}
#opSubtract {
  grid-area: subtract;
}
#opDot {
  grid-area: dot;
}
#opEqual {
  grid-area: equal;
}
#opSum {
  grid-area: sum;
}
